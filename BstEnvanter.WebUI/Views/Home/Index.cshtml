@using System.Linq;
@using BstEnvanter.WebUI.Models
@model List<IndexViewModel>
@{
    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.DimensionOne).ToList());
    var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.Quantity).ToList());
    ViewData["Title"] = "Pie Chart";
}
@{
    if (User.IsInRole("admin") || User.IsInRole("editor"))
    {
        Layout = "~/Views/_Layout.cshtml";

    }
    else
    {
        Layout = "~/Views/_readerLayout.cshtml";
    }
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>

</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <div class="box-body">
                <div class="chart-container">
                    <canvas id="chart" style="width:100%"></canvas>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.min.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

<script type="text/javascript">
    $(function () {
        var chartName = "chart";

        var ctx = document.getElementById(chartName).getContext('2d');

        var data = {

            labels: @Html.Raw(XLabels),
            datasets: [{
                //label: "Drinks Chart",
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(255, 0, 0)',
                    'rgba(0, 255, 0)',
                    'rgba(0, 0, 255)',
                    'rgba(192, 192, 192)',
                    'rgba(255, 255, 0)',
                    'rgba(255, 0, 255)'
                ],
                borderColor: [
                    'rgba(255,99,132,1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)',
                    'rgba(255, 0, 0)',
                    'rgba(0, 255, 0)',
                    'rgba(0, 0, 255)',
                    'rgba(192, 192, 192)',
                    'rgba(255, 255, 0)',
                    'rgba(255, 0, 255)'
                ],
                borderWidth: 1,
                data: @Html.Raw(YValues)

                                                            }]
        };

        var options = {
            //tooltips: {
            //   enabled:true,
            //    //intersect:false,
            //},
            scales: {
                yAxes: [{
                    ticks: {
                        display:false,
                        min: 0,
                        beginAtZero: true
                    },
                    gridLines: {
                        display: false,
                        color: "rgba(255,99,164,0.2)"
                    }
                }],
                xAxes: [{
                    ticks: {
                        display: false,
                        min: 0,
                        beginAtZero: true
                    },
                    gridLines: {
                        display: false
                    }
                }]
            }
        };
        var myChart = new Chart(ctx, {
            options: options,

            data: data,
            type: 'pie',
        });
    });
</script>


@*<script>
    $(function () {
        setTimeout(function () {
            window.location.replace("../editor/listofproduct");
        }, 5000);
    });
</script>*@